default:
  # image: node:16.20.2
  tags:
    - docker
  # cache:
  #   key:
  #     files:
  #       - pnpm-lock.yaml
  #   paths:
  #     - .pnpm-store
  #   policy: pull
  # before_script:
  #   - corepack enable
  #   - corepack prepare pnpm@latest-8 --activate
  #   - pnpm config set store-dir .pnpm-store

# 官方默認預定義的5個階段（按順序）：.pre、build、test、deploy、.post
stages:
  - build
  # - test
  - deploy

# global variable
# variables:
#   TEST_VAR: 'Hello World!'


# 如果您想在建立合併請求時以及合併到主分支後運行管道
# workflow:
#   rules:
#     - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
#     - if: $CI_COMMIT_TAG
#     - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "push"

# 可復用的任務
# .notify_sh:
#   after_script:
#     - echo "$LINE_MSG"

# pre-job:
#   stage: .pre
#   script:
#     - |
#       echo ======================= all env ===============================
#       env

job_test:
  stage: build
  script:
    - mkdir dist
    - echo "Hello World" > ./dist/hi.txt
    - echo "Hello" > ./dist/hello.txt
  artifacts:
    paths:
      - dist

job_build:
  image: docksal/ssh-agent:latest
  stage: deploy
  before_script:
    # - ssh-agent bash
    # - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$DEPLOY_SSHKEY")
    # - mkdir -p ~/.ssh
    # - chmod 700 ~/.ssh
  script:
    - |
      scp -o StrictHostKeyChecking=no -P 6022 -r ./dist andersen@172.16.100.56:/home/andersen/
      ls ./dist


# job_build:
#   stage: build
#   only:
#     - main
#   cache:
#     key:
#       files:
#         - package-lock.json
#       prefix: npm
#     paths:
#       - node_modules/
#     policy: pull
#   script:
#     - |
#       npm i
#       npm run build
#   artifacts:
#     paths:
#       - dist
#     expire_in: 30 mins

# job_on_success:
#   stage: test
#   only:
#     - main
#   needs: ["job_build"]
#   when: on_success
#   script:
#     - echo 'success!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!'

# job_on_fail:
#   stage: test
#   only:
#     - main
#   needs: ["job_build"]
#   when: on_failure
#   script:
#     - echo 'fail !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!'

# last-job:
#   stage: .post
#   script:
#     - echo "$TEST_VAR"

# CI 變數說明
# https://docs.gitlab.cn/jh/ci/variables/predefined_variables.html
# CI 變數重點 CI_MERGE_REQUEST_EVENT_TYPE 